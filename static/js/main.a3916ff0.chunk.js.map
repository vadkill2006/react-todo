{"version":3,"sources":["component/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","console","log","JSON","parse","items","setItems","useEffect","setItem","stringify","className","type","placeholder","value","onChange","e","target","title","onClick","map","elem","ind","id","updatedItem","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNA4EeA,EAhEF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAbd,WACZ,IAAIG,EAAOC,aAAaC,QAAQ,SAEhC,OADAC,QAAQC,IAAIJ,GACTA,EACQK,KAAKC,MAAML,aAAaC,QAAQ,UAEhC,GAOwBA,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA4BA,OAJAC,qBAAU,WACNR,aAAaS,QAAQ,QAASL,KAAKM,UAAUJ,MAC9C,CAACA,IAGA,mCACI,qBAAKK,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,iCACI,8DAEJ,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,MAAOjB,EAAWkB,SAAU,SAACC,GAAD,OAAOlB,EAAakB,EAAEC,OAAOH,UACpG,mBAAGH,UAAU,qBAAqBO,MAAM,WAAWC,QAnCvD,WACRtB,IAGAU,EAAS,GAAD,mBAAKD,GAAL,CAAYT,KACpBC,EAAa,WAgCL,qBAAKa,UAAU,YAAf,SAEQL,EAAMc,KAAI,SAACC,EAAMC,GACb,OACI,sBAAKX,UAAU,WAAf,UACI,6BAAKU,IACL,mBAAGV,UAAU,2BAA2BO,MAAM,cAAcC,QAAS,kBAlCtF,SAACI,GAChBrB,QAAQC,IAAIoB,GACZ,IAAMC,EAAclB,EAAMmB,QAAO,SAACJ,EAAMC,GACpC,OAAOA,IAAQC,KAGnBhB,EAASiB,GA4BkGE,CAAWJ,QAF3DA,QAS/C,qBAAKX,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAegB,oBAAkB,aAAaR,QAjClE,WACdZ,EAAS,KAgCO,SAAoF,0DCxD7FqB,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3916ff0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nconst getItem = () => {\r\n    let list = localStorage.getItem('lists');\r\n    console.log(list)\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getItem());\r\n\r\n    const addItem = () =>{\r\n        if(!inputData){\r\n\r\n        }else{\r\n            setItems([...items, inputData]);\r\n            setInputData(\"\");\r\n        }        \r\n    }\r\n\r\n    const deleteItem = (id) =>{\r\n        console.log(id)\r\n        const updatedItem = items.filter((elem, ind) =>{\r\n            return ind !== id;\r\n        });\r\n\r\n        setItems(updatedItem);\r\n    }\r\n\r\n    const removeAll = () =>{\r\n        setItems([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <figcaption>Add Your List Here</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Add Items\" value={inputData} onChange={(e) => setInputData(e.target.value)} />\r\n                        <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i>\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem, ind) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={ind}>\r\n                                        <h3>{elem}</h3>\r\n                                        <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(ind)}></i>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>Check List</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Todo from \"./component/Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}